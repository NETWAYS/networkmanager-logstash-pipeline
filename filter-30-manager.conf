filter {
  if "[nm_component]" == "manager" {

# kernel firmware directory '/lib/firmware' changed => https://www.kernel.org/doc/html/latest/driver-api/firmware/fw_search_path.html
    if [message] =~ /^kernel firmware/ {
      grok {
        match => ["message","kernel firmware directory %{DATA:[kernel][firmware][directory]} %{GREEDYDATA:[message][rest]}"]1
        id => "kernel_firmware"
        tag_on_failure => ["_grokparsefaillure","kernel_firmware_grok_failed"]
      }
    }

# (lo): new Generic device (/org/freedesktop/NetworkManager/Devices/1)
# (ens192): new Ethernet device (/org/freedesktop/NetworkManager/Devices/2)
    if [message] =~ /^\(\w+\)/ {
      grok {
        match => ["message","\(%{DATA:[nic][name]}\): new %{DATA:[nic][device][type]} device \(%{DATA:[d_bus][api][interface]}\)"]
        id => "new_nm_device"
        tag_on_failure => ["_grokparsefaillure","new_nm_device_grok_failed"]
      }
    }

# NetworkManager state is now CONNECTING
# NetworkManager state is now CONNECTED_LOCAL
# NetworkManager state is now CONNECTED_SITE
    if [message] =~ /NetworkManger state/ {
      grok {
        match => ["message","%{DATA:[service][name]} state is now %{GREEDYDATA:[service][state]}"]
        id => "nm_service_state"
        tag_on_failure => ["_grokparsefaillure","nm_service_state_grok_failed"]
      }
    }
    if [message] =~ /^rfkill/ {
      grok {
        match => ["message","%{DATA:[wireless_network][tool]}: %{DATA:[wireless_network][type]} %{DATA:[wireless_network][state]} by %{DATA:[wireless][module]}; enabled by state file"]
        id => "wireless_network"
        tag_on_failure => ["_grokparsefaillure","wireless_network_grok_failed"]

      }
  }
}
}
